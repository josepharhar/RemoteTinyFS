// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server/src/main/proto/model.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server/src/main/proto/model.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tinyfs {

namespace {

const ::google::protobuf::Descriptor* ClientRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientRegistrationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientRegistrationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientRegistrationResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientRegistrationResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* WriteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WriteRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_server_2fsrc_2fmain_2fproto_2fmodel_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_server_2fsrc_2fmain_2fproto_2fmodel_2eproto() {
  protobuf_AddDesc_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "server/src/main/proto/model.proto");
  GOOGLE_CHECK(file != NULL);
  ClientRequest_descriptor_ = file->message_type(0);
  static const int ClientRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, request_),
  };
  ClientRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientRequest_descriptor_,
      ClientRequest::internal_default_instance(),
      ClientRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRequest, _internal_metadata_));
  ClientRegistrationRequest_descriptor_ = file->message_type(1);
  static const int ClientRegistrationRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRegistrationRequest, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRegistrationRequest, fs_names_),
  };
  ClientRegistrationRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientRegistrationRequest_descriptor_,
      ClientRegistrationRequest::internal_default_instance(),
      ClientRegistrationRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientRegistrationRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRegistrationRequest, _internal_metadata_));
  ClientRegistrationResponse_descriptor_ = file->message_type(2);
  static const int ClientRegistrationResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRegistrationResponse, sessionid_),
  };
  ClientRegistrationResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientRegistrationResponse_descriptor_,
      ClientRegistrationResponse::internal_default_instance(),
      ClientRegistrationResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientRegistrationResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientRegistrationResponse, _internal_metadata_));
  WriteRequest_descriptor_ = file->message_type(3);
  static const int WriteRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, file_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, offset_),
  };
  WriteRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WriteRequest_descriptor_,
      WriteRequest::internal_default_instance(),
      WriteRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(WriteRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WriteRequest, _internal_metadata_));
  ReadRequest_descriptor_ = file->message_type(4);
  static const int ReadRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, file_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, size_),
  };
  ReadRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadRequest_descriptor_,
      ReadRequest::internal_default_instance(),
      ReadRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, _internal_metadata_));
  ReadResponse_descriptor_ = file->message_type(5);
  static const int ReadResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, message_),
  };
  ReadResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadResponse_descriptor_,
      ReadResponse::internal_default_instance(),
      ReadResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_server_2fsrc_2fmain_2fproto_2fmodel_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientRequest_descriptor_, ClientRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientRegistrationRequest_descriptor_, ClientRegistrationRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientRegistrationResponse_descriptor_, ClientRegistrationResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WriteRequest_descriptor_, WriteRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadRequest_descriptor_, ReadRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadResponse_descriptor_, ReadResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_server_2fsrc_2fmain_2fproto_2fmodel_2eproto() {
  ClientRequest_default_instance_.Shutdown();
  delete ClientRequest_reflection_;
  ClientRegistrationRequest_default_instance_.Shutdown();
  delete ClientRegistrationRequest_reflection_;
  ClientRegistrationResponse_default_instance_.Shutdown();
  delete ClientRegistrationResponse_reflection_;
  WriteRequest_default_instance_.Shutdown();
  delete WriteRequest_reflection_;
  ReadRequest_default_instance_.Shutdown();
  delete ReadRequest_reflection_;
  ReadResponse_default_instance_.Shutdown();
  delete ReadResponse_reflection_;
}

void protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ClientRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ClientRegistrationRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ClientRegistrationResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  WriteRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReadRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReadResponse_default_instance_.DefaultConstruct();
  ClientRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientRegistrationRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientRegistrationResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  WriteRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReadRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReadResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto_once_);
void protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto_once_,
                 &protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto_impl);
}
void protobuf_AddDesc_server_2fsrc_2fmain_2fproto_2fmodel_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!server/src/main/proto/model.proto\022\006tin"
    "yfs\032\031google/protobuf/any.proto\"6\n\rClient"
    "Request\022%\n\007request\030\001 \001(\0132\024.google.protob"
    "uf.Any\"<\n\031ClientRegistrationRequest\022\r\n\005t"
    "oken\030\001 \001(\014\022\020\n\010fs_names\030\002 \003(\t\"/\n\032ClientRe"
    "gistrationResponse\022\021\n\tsessionId\030\001 \001(\t\"P\n"
    "\014WriteRequest\022\021\n\tsessionId\030\001 \001(\t\022\014\n\004file"
    "\030\002 \001(\t\022\017\n\007message\030\003 \001(\014\022\016\n\006offset\030\004 \001(\005\""
    "L\n\013ReadRequest\022\021\n\tsessionId\030\001 \001(\t\022\014\n\004fil"
    "e\030\002 \001(\t\022\016\n\006offset\030\003 \001(\005\022\014\n\004size\030\004 \001(\005\"\037\n"
    "\014ReadResponse\022\017\n\007message\030\001 \001(\014B \n\020com.ti"
    "nyfs.modelB\014ServiceModelb\006proto3", 472);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server/src/main/proto/model.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_server_2fsrc_2fmain_2fproto_2fmodel_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_server_2fsrc_2fmain_2fproto_2fmodel_2eproto_once_);
void protobuf_AddDesc_server_2fsrc_2fmain_2fproto_2fmodel_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_server_2fsrc_2fmain_2fproto_2fmodel_2eproto_once_,
                 &protobuf_AddDesc_server_2fsrc_2fmain_2fproto_2fmodel_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_server_2fsrc_2fmain_2fproto_2fmodel_2eproto {
  StaticDescriptorInitializer_server_2fsrc_2fmain_2fproto_2fmodel_2eproto() {
    protobuf_AddDesc_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  }
} static_descriptor_initializer_server_2fsrc_2fmain_2fproto_2fmodel_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientRequest::kRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientRequest::ClientRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinyfs.ClientRequest)
}

void ClientRequest::InitAsDefaultInstance() {
  request_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

ClientRequest::ClientRequest(const ClientRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tinyfs.ClientRequest)
}

void ClientRequest::SharedCtor() {
  request_ = NULL;
  _cached_size_ = 0;
}

ClientRequest::~ClientRequest() {
  // @@protoc_insertion_point(destructor:tinyfs.ClientRequest)
  SharedDtor();
}

void ClientRequest::SharedDtor() {
  if (this != &ClientRequest_default_instance_.get()) {
    delete request_;
  }
}

void ClientRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientRequest_descriptor_;
}

const ClientRequest& ClientRequest::default_instance() {
  protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientRequest> ClientRequest_default_instance_;

ClientRequest* ClientRequest::New(::google::protobuf::Arena* arena) const {
  ClientRequest* n = new ClientRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinyfs.ClientRequest)
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}

bool ClientRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinyfs.ClientRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Any request = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinyfs.ClientRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinyfs.ClientRequest)
  return false;
#undef DO_
}

void ClientRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinyfs.ClientRequest)
  // optional .google.protobuf.Any request = 1;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->request_, output);
  }

  // @@protoc_insertion_point(serialize_end:tinyfs.ClientRequest)
}

::google::protobuf::uint8* ClientRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinyfs.ClientRequest)
  // optional .google.protobuf.Any request = 1;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->request_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tinyfs.ClientRequest)
  return target;
}

size_t ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinyfs.ClientRequest)
  size_t total_size = 0;

  // optional .google.protobuf.Any request = 1;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->request_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinyfs.ClientRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinyfs.ClientRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinyfs.ClientRequest)
    UnsafeMergeFrom(*source);
  }
}

void ClientRequest::MergeFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinyfs.ClientRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientRequest::UnsafeMergeFrom(const ClientRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_request()) {
    mutable_request()->::google::protobuf::Any::MergeFrom(from.request());
  }
}

void ClientRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinyfs.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientRequest::CopyFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinyfs.ClientRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientRequest::IsInitialized() const {

  return true;
}

void ClientRequest::Swap(ClientRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientRequest::InternalSwap(ClientRequest* other) {
  std::swap(request_, other->request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientRequest_descriptor_;
  metadata.reflection = ClientRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientRequest

// optional .google.protobuf.Any request = 1;
bool ClientRequest::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
void ClientRequest::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}
const ::google::protobuf::Any& ClientRequest::request() const {
  // @@protoc_insertion_point(field_get:tinyfs.ClientRequest.request)
  return request_ != NULL ? *request_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* ClientRequest::mutable_request() {
  
  if (request_ == NULL) {
    request_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:tinyfs.ClientRequest.request)
  return request_;
}
::google::protobuf::Any* ClientRequest::release_request() {
  // @@protoc_insertion_point(field_release:tinyfs.ClientRequest.request)
  
  ::google::protobuf::Any* temp = request_;
  request_ = NULL;
  return temp;
}
void ClientRequest::set_allocated_request(::google::protobuf::Any* request) {
  delete request_;
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tinyfs.ClientRequest.request)
}

inline const ClientRequest* ClientRequest::internal_default_instance() {
  return &ClientRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientRegistrationRequest::kTokenFieldNumber;
const int ClientRegistrationRequest::kFsNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientRegistrationRequest::ClientRegistrationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinyfs.ClientRegistrationRequest)
}

void ClientRegistrationRequest::InitAsDefaultInstance() {
}

ClientRegistrationRequest::ClientRegistrationRequest(const ClientRegistrationRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tinyfs.ClientRegistrationRequest)
}

void ClientRegistrationRequest::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClientRegistrationRequest::~ClientRegistrationRequest() {
  // @@protoc_insertion_point(destructor:tinyfs.ClientRegistrationRequest)
  SharedDtor();
}

void ClientRegistrationRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientRegistrationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientRegistrationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientRegistrationRequest_descriptor_;
}

const ClientRegistrationRequest& ClientRegistrationRequest::default_instance() {
  protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientRegistrationRequest> ClientRegistrationRequest_default_instance_;

ClientRegistrationRequest* ClientRegistrationRequest::New(::google::protobuf::Arena* arena) const {
  ClientRegistrationRequest* n = new ClientRegistrationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientRegistrationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinyfs.ClientRegistrationRequest)
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fs_names_.Clear();
}

bool ClientRegistrationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinyfs.ClientRegistrationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes token = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_fs_names;
        break;
      }

      // repeated string fs_names = 2;
      case 2: {
        if (tag == 18) {
         parse_fs_names:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fs_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fs_names(this->fs_names_size() - 1).data(),
            this->fs_names(this->fs_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinyfs.ClientRegistrationRequest.fs_names"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_fs_names;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinyfs.ClientRegistrationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinyfs.ClientRegistrationRequest)
  return false;
#undef DO_
}

void ClientRegistrationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinyfs.ClientRegistrationRequest)
  // optional bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // repeated string fs_names = 2;
  for (int i = 0; i < this->fs_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fs_names(i).data(), this->fs_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinyfs.ClientRegistrationRequest.fs_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->fs_names(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tinyfs.ClientRegistrationRequest)
}

::google::protobuf::uint8* ClientRegistrationRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinyfs.ClientRegistrationRequest)
  // optional bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // repeated string fs_names = 2;
  for (int i = 0; i < this->fs_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fs_names(i).data(), this->fs_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinyfs.ClientRegistrationRequest.fs_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->fs_names(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tinyfs.ClientRegistrationRequest)
  return target;
}

size_t ClientRegistrationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinyfs.ClientRegistrationRequest)
  size_t total_size = 0;

  // optional bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // repeated string fs_names = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fs_names_size());
  for (int i = 0; i < this->fs_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fs_names(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientRegistrationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinyfs.ClientRegistrationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientRegistrationRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientRegistrationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinyfs.ClientRegistrationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinyfs.ClientRegistrationRequest)
    UnsafeMergeFrom(*source);
  }
}

void ClientRegistrationRequest::MergeFrom(const ClientRegistrationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinyfs.ClientRegistrationRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientRegistrationRequest::UnsafeMergeFrom(const ClientRegistrationRequest& from) {
  GOOGLE_DCHECK(&from != this);
  fs_names_.UnsafeMergeFrom(from.fs_names_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ClientRegistrationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinyfs.ClientRegistrationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientRegistrationRequest::CopyFrom(const ClientRegistrationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinyfs.ClientRegistrationRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientRegistrationRequest::IsInitialized() const {

  return true;
}

void ClientRegistrationRequest::Swap(ClientRegistrationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientRegistrationRequest::InternalSwap(ClientRegistrationRequest* other) {
  token_.Swap(&other->token_);
  fs_names_.UnsafeArenaSwap(&other->fs_names_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientRegistrationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientRegistrationRequest_descriptor_;
  metadata.reflection = ClientRegistrationRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientRegistrationRequest

// optional bytes token = 1;
void ClientRegistrationRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientRegistrationRequest::token() const {
  // @@protoc_insertion_point(field_get:tinyfs.ClientRegistrationRequest.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientRegistrationRequest::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinyfs.ClientRegistrationRequest.token)
}
void ClientRegistrationRequest::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinyfs.ClientRegistrationRequest.token)
}
void ClientRegistrationRequest::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinyfs.ClientRegistrationRequest.token)
}
::std::string* ClientRegistrationRequest::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:tinyfs.ClientRegistrationRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientRegistrationRequest::release_token() {
  // @@protoc_insertion_point(field_release:tinyfs.ClientRegistrationRequest.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientRegistrationRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:tinyfs.ClientRegistrationRequest.token)
}

// repeated string fs_names = 2;
int ClientRegistrationRequest::fs_names_size() const {
  return fs_names_.size();
}
void ClientRegistrationRequest::clear_fs_names() {
  fs_names_.Clear();
}
const ::std::string& ClientRegistrationRequest::fs_names(int index) const {
  // @@protoc_insertion_point(field_get:tinyfs.ClientRegistrationRequest.fs_names)
  return fs_names_.Get(index);
}
::std::string* ClientRegistrationRequest::mutable_fs_names(int index) {
  // @@protoc_insertion_point(field_mutable:tinyfs.ClientRegistrationRequest.fs_names)
  return fs_names_.Mutable(index);
}
void ClientRegistrationRequest::set_fs_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tinyfs.ClientRegistrationRequest.fs_names)
  fs_names_.Mutable(index)->assign(value);
}
void ClientRegistrationRequest::set_fs_names(int index, const char* value) {
  fs_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tinyfs.ClientRegistrationRequest.fs_names)
}
void ClientRegistrationRequest::set_fs_names(int index, const char* value, size_t size) {
  fs_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tinyfs.ClientRegistrationRequest.fs_names)
}
::std::string* ClientRegistrationRequest::add_fs_names() {
  // @@protoc_insertion_point(field_add_mutable:tinyfs.ClientRegistrationRequest.fs_names)
  return fs_names_.Add();
}
void ClientRegistrationRequest::add_fs_names(const ::std::string& value) {
  fs_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tinyfs.ClientRegistrationRequest.fs_names)
}
void ClientRegistrationRequest::add_fs_names(const char* value) {
  fs_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tinyfs.ClientRegistrationRequest.fs_names)
}
void ClientRegistrationRequest::add_fs_names(const char* value, size_t size) {
  fs_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tinyfs.ClientRegistrationRequest.fs_names)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientRegistrationRequest::fs_names() const {
  // @@protoc_insertion_point(field_list:tinyfs.ClientRegistrationRequest.fs_names)
  return fs_names_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ClientRegistrationRequest::mutable_fs_names() {
  // @@protoc_insertion_point(field_mutable_list:tinyfs.ClientRegistrationRequest.fs_names)
  return &fs_names_;
}

inline const ClientRegistrationRequest* ClientRegistrationRequest::internal_default_instance() {
  return &ClientRegistrationRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientRegistrationResponse::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientRegistrationResponse::ClientRegistrationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinyfs.ClientRegistrationResponse)
}

void ClientRegistrationResponse::InitAsDefaultInstance() {
}

ClientRegistrationResponse::ClientRegistrationResponse(const ClientRegistrationResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tinyfs.ClientRegistrationResponse)
}

void ClientRegistrationResponse::SharedCtor() {
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClientRegistrationResponse::~ClientRegistrationResponse() {
  // @@protoc_insertion_point(destructor:tinyfs.ClientRegistrationResponse)
  SharedDtor();
}

void ClientRegistrationResponse::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientRegistrationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientRegistrationResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientRegistrationResponse_descriptor_;
}

const ClientRegistrationResponse& ClientRegistrationResponse::default_instance() {
  protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientRegistrationResponse> ClientRegistrationResponse_default_instance_;

ClientRegistrationResponse* ClientRegistrationResponse::New(::google::protobuf::Arena* arena) const {
  ClientRegistrationResponse* n = new ClientRegistrationResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientRegistrationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinyfs.ClientRegistrationResponse)
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ClientRegistrationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinyfs.ClientRegistrationResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sessionId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinyfs.ClientRegistrationResponse.sessionId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinyfs.ClientRegistrationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinyfs.ClientRegistrationResponse)
  return false;
#undef DO_
}

void ClientRegistrationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinyfs.ClientRegistrationResponse)
  // optional string sessionId = 1;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinyfs.ClientRegistrationResponse.sessionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sessionid(), output);
  }

  // @@protoc_insertion_point(serialize_end:tinyfs.ClientRegistrationResponse)
}

::google::protobuf::uint8* ClientRegistrationResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinyfs.ClientRegistrationResponse)
  // optional string sessionId = 1;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinyfs.ClientRegistrationResponse.sessionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sessionid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tinyfs.ClientRegistrationResponse)
  return target;
}

size_t ClientRegistrationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinyfs.ClientRegistrationResponse)
  size_t total_size = 0;

  // optional string sessionId = 1;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientRegistrationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinyfs.ClientRegistrationResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientRegistrationResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientRegistrationResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinyfs.ClientRegistrationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinyfs.ClientRegistrationResponse)
    UnsafeMergeFrom(*source);
  }
}

void ClientRegistrationResponse::MergeFrom(const ClientRegistrationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinyfs.ClientRegistrationResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientRegistrationResponse::UnsafeMergeFrom(const ClientRegistrationResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
}

void ClientRegistrationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinyfs.ClientRegistrationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientRegistrationResponse::CopyFrom(const ClientRegistrationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinyfs.ClientRegistrationResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientRegistrationResponse::IsInitialized() const {

  return true;
}

void ClientRegistrationResponse::Swap(ClientRegistrationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientRegistrationResponse::InternalSwap(ClientRegistrationResponse* other) {
  sessionid_.Swap(&other->sessionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientRegistrationResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientRegistrationResponse_descriptor_;
  metadata.reflection = ClientRegistrationResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientRegistrationResponse

// optional string sessionId = 1;
void ClientRegistrationResponse::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientRegistrationResponse::sessionid() const {
  // @@protoc_insertion_point(field_get:tinyfs.ClientRegistrationResponse.sessionId)
  return sessionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientRegistrationResponse::set_sessionid(const ::std::string& value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinyfs.ClientRegistrationResponse.sessionId)
}
void ClientRegistrationResponse::set_sessionid(const char* value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinyfs.ClientRegistrationResponse.sessionId)
}
void ClientRegistrationResponse::set_sessionid(const char* value, size_t size) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinyfs.ClientRegistrationResponse.sessionId)
}
::std::string* ClientRegistrationResponse::mutable_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:tinyfs.ClientRegistrationResponse.sessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientRegistrationResponse::release_sessionid() {
  // @@protoc_insertion_point(field_release:tinyfs.ClientRegistrationResponse.sessionId)
  
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientRegistrationResponse::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    
  } else {
    
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:tinyfs.ClientRegistrationResponse.sessionId)
}

inline const ClientRegistrationResponse* ClientRegistrationResponse::internal_default_instance() {
  return &ClientRegistrationResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRequest::kSessionIdFieldNumber;
const int WriteRequest::kFileFieldNumber;
const int WriteRequest::kMessageFieldNumber;
const int WriteRequest::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRequest::WriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinyfs.WriteRequest)
}

void WriteRequest::InitAsDefaultInstance() {
}

WriteRequest::WriteRequest(const WriteRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tinyfs.WriteRequest)
}

void WriteRequest::SharedCtor() {
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = 0;
  _cached_size_ = 0;
}

WriteRequest::~WriteRequest() {
  // @@protoc_insertion_point(destructor:tinyfs.WriteRequest)
  SharedDtor();
}

void WriteRequest::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WriteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WriteRequest_descriptor_;
}

const WriteRequest& WriteRequest::default_instance() {
  protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WriteRequest> WriteRequest_default_instance_;

WriteRequest* WriteRequest::New(::google::protobuf::Arena* arena) const {
  WriteRequest* n = new WriteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinyfs.WriteRequest)
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = 0;
}

bool WriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinyfs.WriteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sessionId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinyfs.WriteRequest.sessionId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_file;
        break;
      }

      // optional string file = 2;
      case 2: {
        if (tag == 18) {
         parse_file:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), this->file().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinyfs.WriteRequest.file"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_message;
        break;
      }

      // optional bytes message = 3;
      case 3: {
        if (tag == 26) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_offset;
        break;
      }

      // optional int32 offset = 4;
      case 4: {
        if (tag == 32) {
         parse_offset:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinyfs.WriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinyfs.WriteRequest)
  return false;
#undef DO_
}

void WriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinyfs.WriteRequest)
  // optional string sessionId = 1;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinyfs.WriteRequest.sessionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sessionid(), output);
  }

  // optional string file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinyfs.WriteRequest.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file(), output);
  }

  // optional bytes message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->message(), output);
  }

  // optional int32 offset = 4;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->offset(), output);
  }

  // @@protoc_insertion_point(serialize_end:tinyfs.WriteRequest)
}

::google::protobuf::uint8* WriteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinyfs.WriteRequest)
  // optional string sessionId = 1;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinyfs.WriteRequest.sessionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sessionid(), target);
  }

  // optional string file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinyfs.WriteRequest.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file(), target);
  }

  // optional bytes message = 3;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->message(), target);
  }

  // optional int32 offset = 4;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->offset(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tinyfs.WriteRequest)
  return target;
}

size_t WriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinyfs.WriteRequest)
  size_t total_size = 0;

  // optional string sessionId = 1;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  // optional string file = 2;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // optional bytes message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // optional int32 offset = 4;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinyfs.WriteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WriteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinyfs.WriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinyfs.WriteRequest)
    UnsafeMergeFrom(*source);
  }
}

void WriteRequest::MergeFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinyfs.WriteRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WriteRequest::UnsafeMergeFrom(const WriteRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void WriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinyfs.WriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRequest::CopyFrom(const WriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinyfs.WriteRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WriteRequest::IsInitialized() const {

  return true;
}

void WriteRequest::Swap(WriteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteRequest::InternalSwap(WriteRequest* other) {
  sessionid_.Swap(&other->sessionid_);
  file_.Swap(&other->file_);
  message_.Swap(&other->message_);
  std::swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WriteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WriteRequest_descriptor_;
  metadata.reflection = WriteRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteRequest

// optional string sessionId = 1;
void WriteRequest::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WriteRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:tinyfs.WriteRequest.sessionId)
  return sessionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteRequest::set_sessionid(const ::std::string& value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinyfs.WriteRequest.sessionId)
}
void WriteRequest::set_sessionid(const char* value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinyfs.WriteRequest.sessionId)
}
void WriteRequest::set_sessionid(const char* value, size_t size) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinyfs.WriteRequest.sessionId)
}
::std::string* WriteRequest::mutable_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:tinyfs.WriteRequest.sessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WriteRequest::release_sessionid() {
  // @@protoc_insertion_point(field_release:tinyfs.WriteRequest.sessionId)
  
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteRequest::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    
  } else {
    
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:tinyfs.WriteRequest.sessionId)
}

// optional string file = 2;
void WriteRequest::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WriteRequest::file() const {
  // @@protoc_insertion_point(field_get:tinyfs.WriteRequest.file)
  return file_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteRequest::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinyfs.WriteRequest.file)
}
void WriteRequest::set_file(const char* value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinyfs.WriteRequest.file)
}
void WriteRequest::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinyfs.WriteRequest.file)
}
::std::string* WriteRequest::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:tinyfs.WriteRequest.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WriteRequest::release_file() {
  // @@protoc_insertion_point(field_release:tinyfs.WriteRequest.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteRequest::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:tinyfs.WriteRequest.file)
}

// optional bytes message = 3;
void WriteRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& WriteRequest::message() const {
  // @@protoc_insertion_point(field_get:tinyfs.WriteRequest.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteRequest::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinyfs.WriteRequest.message)
}
void WriteRequest::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinyfs.WriteRequest.message)
}
void WriteRequest::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinyfs.WriteRequest.message)
}
::std::string* WriteRequest::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:tinyfs.WriteRequest.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WriteRequest::release_message() {
  // @@protoc_insertion_point(field_release:tinyfs.WriteRequest.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WriteRequest::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:tinyfs.WriteRequest.message)
}

// optional int32 offset = 4;
void WriteRequest::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 WriteRequest::offset() const {
  // @@protoc_insertion_point(field_get:tinyfs.WriteRequest.offset)
  return offset_;
}
void WriteRequest::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:tinyfs.WriteRequest.offset)
}

inline const WriteRequest* WriteRequest::internal_default_instance() {
  return &WriteRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRequest::kSessionIdFieldNumber;
const int ReadRequest::kFileFieldNumber;
const int ReadRequest::kOffsetFieldNumber;
const int ReadRequest::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRequest::ReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinyfs.ReadRequest)
}

void ReadRequest::InitAsDefaultInstance() {
}

ReadRequest::ReadRequest(const ReadRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tinyfs.ReadRequest)
}

void ReadRequest::SharedCtor() {
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&offset_) + sizeof(size_));
  _cached_size_ = 0;
}

ReadRequest::~ReadRequest() {
  // @@protoc_insertion_point(destructor:tinyfs.ReadRequest)
  SharedDtor();
}

void ReadRequest::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadRequest_descriptor_;
}

const ReadRequest& ReadRequest::default_instance() {
  protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReadRequest> ReadRequest_default_instance_;

ReadRequest* ReadRequest::New(::google::protobuf::Arena* arena) const {
  ReadRequest* n = new ReadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinyfs.ReadRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReadRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReadRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(offset_, size_);
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinyfs.ReadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sessionId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinyfs.ReadRequest.sessionId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_file;
        break;
      }

      // optional string file = 2;
      case 2: {
        if (tag == 18) {
         parse_file:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), this->file().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinyfs.ReadRequest.file"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_offset;
        break;
      }

      // optional int32 offset = 3;
      case 3: {
        if (tag == 24) {
         parse_offset:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_size;
        break;
      }

      // optional int32 size = 4;
      case 4: {
        if (tag == 32) {
         parse_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinyfs.ReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinyfs.ReadRequest)
  return false;
#undef DO_
}

void ReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinyfs.ReadRequest)
  // optional string sessionId = 1;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinyfs.ReadRequest.sessionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sessionid(), output);
  }

  // optional string file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinyfs.ReadRequest.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file(), output);
  }

  // optional int32 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->offset(), output);
  }

  // optional int32 size = 4;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->size(), output);
  }

  // @@protoc_insertion_point(serialize_end:tinyfs.ReadRequest)
}

::google::protobuf::uint8* ReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinyfs.ReadRequest)
  // optional string sessionId = 1;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinyfs.ReadRequest.sessionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sessionid(), target);
  }

  // optional string file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinyfs.ReadRequest.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file(), target);
  }

  // optional int32 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->offset(), target);
  }

  // optional int32 size = 4;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tinyfs.ReadRequest)
  return target;
}

size_t ReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinyfs.ReadRequest)
  size_t total_size = 0;

  // optional string sessionId = 1;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  // optional string file = 2;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // optional int32 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  // optional int32 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinyfs.ReadRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinyfs.ReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinyfs.ReadRequest)
    UnsafeMergeFrom(*source);
  }
}

void ReadRequest::MergeFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinyfs.ReadRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReadRequest::UnsafeMergeFrom(const ReadRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void ReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinyfs.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequest::CopyFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinyfs.ReadRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReadRequest::IsInitialized() const {

  return true;
}

void ReadRequest::Swap(ReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRequest::InternalSwap(ReadRequest* other) {
  sessionid_.Swap(&other->sessionid_);
  file_.Swap(&other->file_);
  std::swap(offset_, other->offset_);
  std::swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadRequest_descriptor_;
  metadata.reflection = ReadRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadRequest

// optional string sessionId = 1;
void ReadRequest::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:tinyfs.ReadRequest.sessionId)
  return sessionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_sessionid(const ::std::string& value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinyfs.ReadRequest.sessionId)
}
void ReadRequest::set_sessionid(const char* value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinyfs.ReadRequest.sessionId)
}
void ReadRequest::set_sessionid(const char* value, size_t size) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinyfs.ReadRequest.sessionId)
}
::std::string* ReadRequest::mutable_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:tinyfs.ReadRequest.sessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadRequest::release_sessionid() {
  // @@protoc_insertion_point(field_release:tinyfs.ReadRequest.sessionId)
  
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    
  } else {
    
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:tinyfs.ReadRequest.sessionId)
}

// optional string file = 2;
void ReadRequest::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadRequest::file() const {
  // @@protoc_insertion_point(field_get:tinyfs.ReadRequest.file)
  return file_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinyfs.ReadRequest.file)
}
void ReadRequest::set_file(const char* value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinyfs.ReadRequest.file)
}
void ReadRequest::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinyfs.ReadRequest.file)
}
::std::string* ReadRequest::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:tinyfs.ReadRequest.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadRequest::release_file() {
  // @@protoc_insertion_point(field_release:tinyfs.ReadRequest.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:tinyfs.ReadRequest.file)
}

// optional int32 offset = 3;
void ReadRequest::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 ReadRequest::offset() const {
  // @@protoc_insertion_point(field_get:tinyfs.ReadRequest.offset)
  return offset_;
}
void ReadRequest::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:tinyfs.ReadRequest.offset)
}

// optional int32 size = 4;
void ReadRequest::clear_size() {
  size_ = 0;
}
::google::protobuf::int32 ReadRequest::size() const {
  // @@protoc_insertion_point(field_get:tinyfs.ReadRequest.size)
  return size_;
}
void ReadRequest::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:tinyfs.ReadRequest.size)
}

inline const ReadRequest* ReadRequest::internal_default_instance() {
  return &ReadRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResponse::ReadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinyfs.ReadResponse)
}

void ReadResponse::InitAsDefaultInstance() {
}

ReadResponse::ReadResponse(const ReadResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tinyfs.ReadResponse)
}

void ReadResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReadResponse::~ReadResponse() {
  // @@protoc_insertion_point(destructor:tinyfs.ReadResponse)
  SharedDtor();
}

void ReadResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadResponse_descriptor_;
}

const ReadResponse& ReadResponse::default_instance() {
  protobuf_InitDefaults_server_2fsrc_2fmain_2fproto_2fmodel_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReadResponse> ReadResponse_default_instance_;

ReadResponse* ReadResponse::New(::google::protobuf::Arena* arena) const {
  ReadResponse* n = new ReadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinyfs.ReadResponse)
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinyfs.ReadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinyfs.ReadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinyfs.ReadResponse)
  return false;
#undef DO_
}

void ReadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinyfs.ReadResponse)
  // optional bytes message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:tinyfs.ReadResponse)
}

::google::protobuf::uint8* ReadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tinyfs.ReadResponse)
  // optional bytes message = 1;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tinyfs.ReadResponse)
  return target;
}

size_t ReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinyfs.ReadResponse)
  size_t total_size = 0;

  // optional bytes message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinyfs.ReadResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinyfs.ReadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinyfs.ReadResponse)
    UnsafeMergeFrom(*source);
  }
}

void ReadResponse::MergeFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinyfs.ReadResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReadResponse::UnsafeMergeFrom(const ReadResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void ReadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinyfs.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResponse::CopyFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinyfs.ReadResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReadResponse::IsInitialized() const {

  return true;
}

void ReadResponse::Swap(ReadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResponse::InternalSwap(ReadResponse* other) {
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadResponse_descriptor_;
  metadata.reflection = ReadResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadResponse

// optional bytes message = 1;
void ReadResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadResponse::message() const {
  // @@protoc_insertion_point(field_get:tinyfs.ReadResponse.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinyfs.ReadResponse.message)
}
void ReadResponse::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinyfs.ReadResponse.message)
}
void ReadResponse::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinyfs.ReadResponse.message)
}
::std::string* ReadResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:tinyfs.ReadResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadResponse::release_message() {
  // @@protoc_insertion_point(field_release:tinyfs.ReadResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:tinyfs.ReadResponse.message)
}

inline const ReadResponse* ReadResponse::internal_default_instance() {
  return &ReadResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tinyfs

// @@protoc_insertion_point(global_scope)
